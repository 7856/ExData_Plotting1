find.package("devtools")
dir
list
--list
library(devtools)
exit
dir
find.package("devtools")
library("KernSmooth")
install.packages("devtools")
find.package("devtools")
library(devtools)
library("devtools")
find_rtools()
mkdir data
~
dir()
dir
mkdir data
mkdir
exit
x <- 1
x
print (s)
print (x)
x <- 5 ## nothing
x <- 5 # nothing
x
x <- 7 # nothing
x
x <- 5,6,7 # nothing
exit
add2 <- function(x,y) {
x+y
}
add2(4,7)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above (x,12)
above <- function(x,n=10) {
use <- x > n
x[use]
}
above(x)
f<- function(a,b) {
b^2
}
f(1,2)
f(1)
f(,2)
f(2,3)
ls(ebvurbnebt (above))
ls(ebvurbnebt (f))
View(f)
View(f)
f(2,3)
f
ls(environment (f))
f <- gl(3,10)
f
x <- c(rnorm(10),runif(10),rnorm(10,1))
x
str(tapply)
str(lapply)
getwd
getwd
getwd()
str(lapply)
str(colmeans)
str(colMeans)
gl(2,5)
gl(5,2)
str(interaction)
str(x)
traceback
str(traceback)
traceback()
str(colmeans)
traceback()
library(datasets)
data(iris)
view(iris)
traceback
traceback()
view(iris)
traceback()
View(iris)
head(iris)
head(iris)
?iris
mean(iris$Sepal.Length)
split(iris,iris$Species)
s <- split(iris,iris$Species)
mean(s$virginica)
traceback
mean(s$virginica)
traceback()
mean(s$virginica$Sepal.Length)
mean(s)
colMeans(iris)
apply(iris, 2, mean)
traceback()
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
library(datasets)
data(mtcars)
?mtcars
mtcars
View(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
str(mean)
mean(mtcars$mpg)
mean(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
str(with)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
str(tapply)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(split(mtcars,mtcars$cyl)$4$hp)
debug()
traceback()
mean(split(mtcars,mtcars$cyl)$4$hp)
traceback()
mean(split(mtcars,mtcars$cyl)$'4'$hp)
mean(split(mtcars,mtcars$cyl)$'8'$hp)
mean(split(mtcars,mtcars$cyl)$'4'$hp) - mean(split(mtcars,mtcars$cyl)$'8'$hp)
abs(mean(split(mtcars,mtcars$cyl)$'4'$hp) - mean(split(mtcars,mtcars$cyl)$'8'$hp))
debug(ls)
ls
debug(ls)
ls()
exit
q
ls()
str(str)
str(lm)
summary(lm)
summery(lm)
summary
str(rnorm)
str(rbinom)
str(rpois)
str(summaryRprof)
set.seed(1)
rpois(5, 2)
str(rpois)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
library(swirl)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
skip()
x
y <- x-3
y
skip()
?c
z
c(z,555,z)
skip()
skip()
skip()
skip()
my_div
skip()
skip()
skip()
my_div
swirl()
bye90
bye()
?par
?
Devices
?Devices
examples
examples()
examples(par)
example(par)
help(par)
??par
help(lm)
help("lm")
?lm
?"lm"
help()
setwd("~/Coursera/R/Exploratory Data Project 1/ExData_Plotting1")
?read.table
?as.Date
?strptime
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
## Plot to PNG
png("plot1.png", width=480, height=480)
hist(data_subset$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kikowatts)")
dev.off()
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
## Plot to PNG
png("plot1.png", width=480, height=480)
hist(data_subset$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
dev.off()
?plot
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data$Date, data$Time), "%Y-%m-%d $H:$M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
## Plot to PNG
png("plot2.png", width=480, height=480)
plot(data_subset$Global_active_power ~ data_subset$datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d $H:$M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
## Plot to PNG
png("plot2.png", width=480, height=480)
plot(data_subset$Global_active_power ~ data_subset$datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
head(data_subset)
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
## Plot to PNG
png("plot2.png", width=480, height=480)
plot(data_subset$Global_active_power ~ data_subset$datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
head(data_subset)
tail(data_subset)
?as.POSIXct
## Plot 1
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
data_subset$datetime <- as.POSIXct(data_subset$datetime)
## Plot to PNG
png("plot2.png", width=480, height=480)
plot(data_subset$Global_active_power ~ data_subset$datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
summary data_subset
summary(data_subset)
names(data_subse)
names(data_subset)
class(data_subset)
head(data_subset)
str(data_subset)
?legend
## Plot 3
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
data_subset$datetime <- as.POSIXct(data_subset$datetime)
## Plot to PNG
png("plot3.png", width=480, height=480)
plot(data_subset$Sub_metering_1 ~ data_subset$datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(data_subset$Sub_metering_2 ~ data_subset$datetime, col="Red")
lines(data_subset$Sub_metering_3 ~ data_subset$datetime, col="Blue")
Legend("topright", lty=1, col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_1"))
dev.off()
## Plot 3
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
data_subset$datetime <- as.POSIXct(data_subset$datetime)
## Plot to PNG
png("plot3.png", width=480, height=480)
plot(data_subset$Sub_metering_1 ~ data_subset$datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(data_subset$Sub_metering_2 ~ data_subset$datetime, col="Red")
lines(data_subset$Sub_metering_3 ~ data_subset$datetime, col="Blue")
legend("topright", lty=1, col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_1"))
dev.off()
## Plot 3
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
data_subset$datetime <- as.POSIXct(data_subset$datetime)
## Plot to PNG
png("plot3.png", width=480, height=480)
plot(data_subset$Sub_metering_1 ~ data_subset$datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(data_subset$Sub_metering_2 ~ data_subset$datetime, col="Red")
lines(data_subset$Sub_metering_3 ~ data_subset$datetime, col="Blue")
legend("topright", lty=1, col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
## Plot 4
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
data_subset$datetime <- as.POSIXct(data_subset$datetime)
## Plot to PNG
png("plot4.png", width=480, height=480)
par(mfrow=c(2,2))
plot(data_subset$Global_active_power ~ data_subset$datetime, type="l",
ylab="Global Active Power", xlab="")
plot(data_subset$Voltage ~ data_subset$datetime, type="l",
ylab="Voltage", xlab="")
plot(data_subset$Sub_metering_1 ~ data_subset$datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(data_subset$Sub_metering_2 ~ data_subset$datetime, col="Red")
lines(data_subset$Sub_metering_3 ~ data_subset$datetime, col="Blue")
legend("topright", lty=1, col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data_subset$Global_reactive_power ~ data_subset$datetime, type="l",
ylab="Global_reactive_power", xlab="")
dev.off()
## Plot 4
## Read data table
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";",
na.strings = "?")
## Convert date variable to date/time classes
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
## Work only on a subset of the data
data_subset <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
## Convert time variable to date/time classes
data_subset$datetime <- strptime(paste(data_subset$Date, data_subset$Time), "%Y-%m-%d %H:%M:%S")
data_subset$Global_active_power <- as.numeric(data_subset$Global_active_power)
data_subset$datetime <- as.POSIXct(data_subset$datetime)
## Plot to PNG
png("plot4.png", width=480, height=480)
par(mfrow=c(2,2))
plot(data_subset$Global_active_power ~ data_subset$datetime, type="l",
ylab="Global Active Power", xlab="")
plot(data_subset$Voltage ~ data_subset$datetime, type="l",
ylab="Voltage", xlab="")
plot(data_subset$Sub_metering_1 ~ data_subset$datetime, type="l",
ylab="Energy sub metering", xlab="")
lines(data_subset$Sub_metering_2 ~ data_subset$datetime, col="Red")
lines(data_subset$Sub_metering_3 ~ data_subset$datetime, col="Blue")
legend("topright", lty=1, bty="n", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data_subset$Global_reactive_power ~ data_subset$datetime, type="l",
ylab="Global_reactive_power", xlab="")
dev.off()
